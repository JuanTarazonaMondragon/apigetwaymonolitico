version: '3'

services:
  # Service Client
  client-r1:
    hostname: client-r1
    container_name: macc-microservicios-client-r1
    #build: ./clientws
    image: macc-microservicios-client
    volumes:
      - './clientws/app:/code/app'
    ports:
      - '18011:${UVICORN_PORT}'
    environment:
      - 'UVICORN_PORT=${UVICORN_PORT}'
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      network:
        ipv4_address: '${SERVICE_CLIENT_R1_IP}'
    restart: unless-stopped
  #client-r2:
  #  hostname: client-r2
  #  container_name: macc-microservicios-client-r2
  #  #build: ./clientws
  #  image: macc-microservicios-client
  #  volumes:
  #    - './clientws/app:/code/app'
  #  ports:
  #    - '18021:${UVICORN_PORT}'
  #  environment:
  #    - 'UVICORN_PORT=${UVICORN_PORT}'
  #  depends_on:
  #    - rabbitmq
  #  networks:
  #    network:
  #      ipv4_address: '${SERVICE_CLIENT_R2_IP}'
  #  restart: unless-stopped

  # Service Delivery
  delivery-r1:
    hostname: delivery-r1
    container_name: macc-microservicios-delivery-r1
    #build: ./deliveryws
    image: macc-microservicios-delivery
    volumes:
      - './deliveryws/app:/code/app'
    ports:
      - '18012:${UVICORN_PORT}'
    environment:
      - 'UVICORN_PORT=${UVICORN_PORT}'
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      network:
        ipv4_address: '${SERVICE_DELIVERY_R1_IP}'
    restart: unless-stopped
  #delivery-r2:
  #  hostname: delivery-r2
  #  container_name: macc-microservicios-delivery-r2
  #  #build: ./deliveryws
  #  image: macc-microservicios-delivery
  #  volumes:
  #    - './deliveryws/app:/code/app'
  #  ports:
  #    - '18022:${UVICORN_PORT}'
  #  environment:
  #    - 'UVICORN_PORT=${UVICORN_PORT}'
  #  depends_on:
  #    - rabbitmq
  #  networks:
  #    network:
  #      ipv4_address: '${SERVICE_DELIVERY_R2_IP}'
  #  restart: unless-stopped

  # Service Machine
  machine-r1:
    hostname: machine-r1
    container_name: macc-microservicios-machine-r1
    #build: ./machinews
    image: macc-microservicios-machine
    volumes:
      - './machinews/app:/code/app'
    ports:
      - '18013:${UVICORN_PORT}'
    environment:
      - 'UVICORN_PORT=${UVICORN_PORT}'
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      network:
        ipv4_address: '${SERVICE_MACHINE_R1_IP}'
    restart: unless-stopped
  #machine-r2:
  #  hostname: machine-r2
  #  container_name: macc-microservicios-machine-r2
  #  #build: ./machinews
  #  image: macc-microservicios-machine
  #  volumes:
  #    - './machinews/app:/code/app'
  #  ports:
  #    - '18023:${UVICORN_PORT}'
  #  environment:
  #    - 'UVICORN_PORT=${UVICORN_PORT}'
  #  depends_on:
  #    - rabbitmq
  #  networks:
  #    network:
  #      ipv4_address: '${SERVICE_MACHINE_R2_IP}'
  #  restart: unless-stopped

  # Service Order
  order-r1:
    hostname: order-r1
    container_name: macc-microservicios-order-r1
    #build: ./orderws
    image: macc-microservicios-order
    volumes:
      - './orderws/app:/code/app'
    ports:
      - '18014:${UVICORN_PORT}'
    environment:
      - 'UVICORN_PORT=${UVICORN_PORT}'
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      network:
        ipv4_address: '${SERVICE_ORDER_R1_IP}'
    restart: unless-stopped
  #order-r2:
  #  hostname: order-r2
  #  container_name: macc-microservicios-order-r2
  #  #build: ./orderws
  #  image: macc-microservicios-order
  #  volumes:
  #    - './orderws/app:/code/app'
  #  ports:
  #    - '18024:${UVICORN_PORT}'
  #  environment:
  #    - 'UVICORN_PORT=${UVICORN_PORT}'
  #  depends_on:
  #    - rabbitmq
  #  networks:
  #    network:
  #      ipv4_address: '${SERVICE_ORDER_R2_IP}'
  #  restart: unless-stopped

  # Service Payment
  payment-r1:
    hostname: payment-r1
    container_name: macc-microservicios-payment-r1
    #build: ./paymentws
    image: macc-microservicios-payment
    volumes:
      - './paymentws/app:/code/app'
    ports:
      - '18015:${UVICORN_PORT}'
    environment:
      - 'UVICORN_PORT=${UVICORN_PORT}'
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      network:
        ipv4_address: '${SERVICE_PAYMENT_R1_IP}'
    restart: unless-stopped
  #payment-r2:
  #  hostname: payment-r2
  #  container_name: macc-microservicios-payment-r2
  #  #build: ./paymentws
  #  image: macc-microservicios-payment
  #  volumes:
  #    - './paymentws/app:/code/app'
  #  ports:
  #    - '18025:${UVICORN_PORT}'
  #  environment:
  #    - 'UVICORN_PORT=${UVICORN_PORT}'
  #  depends_on:
  #    - rabbitmq
  #  networks:
  #    network:
  #      ipv4_address: '${SERVICE_PAYMENT_R2_IP}'
  #  restart: unless-stopped

  haproxy:
    hostname: haproxy
    image: haproxy:2.6-alpine
    container_name: macc-microservicios-haproxy
    ports:
      - '${HAPROXY_PORT}:${HAPROXY_PORT}'
      - '${HAPROXY_STATS_PORT}:${HAPROXY_STATS_PORT}'
    expose:
      - '${HAPROXY_PORT}'
      - '${HAPROXY_STATS_PORT}'
    networks:
      network:
        ipv4_address: '${HAPROXY_IP}'
    environment:
      - 'SERVICE_CLIENT_R1_IP=${SERVICE_CLIENT_R1_IP}'
    #  - 'SERVICE_CLIENT_R2_IP=${SERVICE_CLIENT_R2_IP}'
      - 'SERVICE_DELIVERY_R1_IP=${SERVICE_DELIVERY_R1_IP}'
    #  - 'SERVICE_DELIVERY_R2_IP=${SERVICE_DELIVERY_R2_IP}'
      - 'SERVICE_MACHINE_R1_IP=${SERVICE_MACHINE_R1_IP}'
    #  - 'SERVICE_MACHINE_R2_IP=${SERVICE_MACHINE_R2_IP}'
      - 'SERVICE_ORDER_R1_IP=${SERVICE_ORDER_R1_IP}'
    #  - 'SERVICE_ORDER_R2_IP=${SERVICE_ORDER_R2_IP}'
      - 'SERVICE_PAYMENT_R1_IP=${SERVICE_PAYMENT_R1_IP}'
    #  - 'SERVICE_PAYMENT_R2_IP=${SERVICE_PAYMENT_R2_IP}'
      - 'SERVICE_CLIENT_R1_PORT=${UVICORN_PORT}'
    #  - 'SERVICE_CLIENT_R2_PORT=${UVICORN_PORT}'
      - 'SERVICE_DELIVERY_R1_PORT=${UVICORN_PORT}'
    #  - 'SERVICE_DELIVERY_R2_PORT=${UVICORN_PORT}'
      - 'SERVICE_MACHINE_R1_PORT=${UVICORN_PORT}'
    #  - 'SERVICE_MACHINE_R2_PORT=${UVICORN_PORT}'
      - 'SERVICE_ORDER_R1_PORT=${UVICORN_PORT}'
    #  - 'SERVICE_ORDER_R2_PORT=${UVICORN_PORT}'
      - 'SERVICE_PAYMENT_R1_PORT=${UVICORN_PORT}'
    #  - 'SERVICE_PAYMENT_R2_PORT=${UVICORN_PORT}'
      - 'HAPROXY_PORT=${HAPROXY_PORT}'
      - 'HAPROXY_STATS_PORT=${HAPROXY_STATS_PORT}'
    restart: unless-stopped
    volumes:
      - './apigateway/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg'

  rabbitmq:
    image: macc-microservicios-rabbitmq
    container_name: macc-microservicios-rabbitmq
    ports:
      - "15672:15672"  # Port For RabbitMQ Web UI
      - "5672:5672"    # Port For RabbitMQ Service
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15672/"]
      interval: 2s
      timeout: 2s
      retries: 10
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: user
    networks:
      network:
        ipv4_address: '${RABBITMQ_IP}'

networks:
  network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: '${NETWORK_SUBNET}'
