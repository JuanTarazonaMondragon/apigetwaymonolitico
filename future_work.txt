CAMBIAR NOMBRES DE MODELOS DE order_id a solo id, para que sea order.id y no order.order_id

machine
piezas gestionadas por machine o por order?
si se cae machine se pierden las piezas que esta produciendo?
si la order se cancela se sigue produciendo piezas? se malgastan?
guardar piezas creadas desde la creacion de order hasta que se haya cancelado en un "almacen" para reutilizar en futuros orders instantaneamente
añadir db a machine si este gestiona piezas
añadir get de lista de piezas del almacen (machine/recovered o algo asi)

order
cola piece.created cambiar nombre a piece.needed

payment
cola order.payed cambiar nombre a payment.processed

client
si se levanta tarde, el resto de servicios fallara el get_public_key, esperar a que clients este healthy en sus endpoints, antes de activar endpoints crear keys. añadir routing key para client.new_key
que client tras poner rest en marcha mande a un routing key evento de nueva public key, asi, los servicios que ya estan despiertos pediran mediante get (hay que hacer que los servicios no peten si se recibe error la primera vez que se pide mediante get y clients esta aun sin levantarse)

all
suscribirse a client.new_key, recibir key por aqui o por el api rest?
en vez de meter argumentos en endpoints hacerlo en parametros, menos endpoints, con filtros, revisar cada endpoint para simplificar main_router

postman
meter username y password como basicauth, introduccion de token automatico para simplicidad

ssl en rabbitmq y haproxy
load balancing en replicas con haproxy, usando db clusters. queues rabbitmq para que no llegue mismo mensaje a replicas de machine? o si, si se quiere que se almacenen, aunque eso iria con db clusters, no?

presentacion
cambiar arquitectura general, los microservicios no publican en colas, sino en routing keys, las colas se bindean a los routing keys y los microservicios se suscriben a las colas
